cmake_minimum_required(VERSION 3.28.3)
project(ISC)
include(fn.cmake)
# Get CFLAGS and CXXFLAGS from the environment
get_include_paths(INCL_PATHS)
find_dir(INCL_PATHS cpuf cpuf_path)
find_file(INCL_PATHS tinyformat.h tinyformat_path)
if (cpuf_path)
    message("Found cpuf library in ${cpuf_path}")
else()

    mkdir(${CMAKE_CURRENT_SOURCE_DIR}/lib)               # make sure lib folder exists
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/lib) # add lib folder to include paths
    download_repository(https://github.com/Sinfolke/cpuf cpuf main ${CMAKE_CURRENT_SOURCE_DIR}/lib)
endif()
if (tinyformat_path)
    message(STATUS "tinyformat.h found in ${tinyformat_path}")
else()
    download_file("https://raw.githubusercontent.com/c42f/tinyformat/master/tinyformat.h" tinyformat "${CMAKE_CURRENT_SOURCE_DIR}/lib/tinyformat.h")
endif()
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/bin)
if (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
    add_compile_definitions(DEBUG)
endif()

if (build_ofc)
    add_compile_definitions("BUILD_OFC")
endif()

if (build_stable)
    add_compile_definitions("BUILD_STABLE")
endif()
add_compile_definitions("BUILD_V" ${build_v})
add_executable(main ${SOURCES})
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS ON)
set_target_properties(main PROPERTIES OUTPUT_NAME isc)
set_target_properties(main PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set_target_properties(main PROPERTIES CXX_STANDARD_REQUIRED 20)
set_target_properties(main PROPERTIES CXX_STANDARD 20)